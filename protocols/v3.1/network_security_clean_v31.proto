// network_security_clean_v3.1.proto
// FECHA: 9 de agosto de 2025
// DESCRIPCI√ìN: Protobuf 3.1 LIMPIO - Sin compatibilidad hacia atr√°s
//
// FILOSOF√çA: TODO O NADA - Sin campos legacy confusos
// ‚úÖ Solo campos absolutamente necesarios y claros
// ‚úÖ GeoIP claramente diferenciado (sniffer/source/destination)
// ‚úÖ 83+ features ML bien organizadas
// ‚úÖ Sistema distribuido eficiente
// ‚ùå CERO compatibilidad hacia atr√°s
// ‚ùå CERO campos ambiguos

syntax = "proto3";

package network_security_v31;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

// =====================================================================
// üöÄ NETWORK FEATURES - 83+ Features ML ORGANIZADAS POR MODELO
// =====================================================================

message NetworkFeatures {
  // üîç IDENTIFICACI√ìN B√ÅSICA DEL FLUJO
  string source_ip = 1;
  string destination_ip = 2;
  uint32 source_port = 3;
  uint32 destination_port = 4;
  uint32 protocol_number = 5;           // Protocolo como n√∫mero (6=TCP, 17=UDP)
  string protocol_name = 6;             // Protocolo como string ("TCP", "UDP", "ICMP")

  // ‚è∞ TIMING PRECISO
  google.protobuf.Timestamp flow_start_time = 7;
  google.protobuf.Duration flow_duration = 8;
  uint64 flow_duration_microseconds = 9;

  // üìä ESTAD√çSTICAS B√ÅSICAS DE PAQUETES
  uint64 total_forward_packets = 10;
  uint64 total_backward_packets = 11;
  uint64 total_forward_bytes = 12;
  uint64 total_backward_bytes = 13;

  // üìè ESTAD√çSTICAS DE LONGITUD - FORWARD
  uint64 forward_packet_length_max = 20;
  uint64 forward_packet_length_min = 21;
  double forward_packet_length_mean = 22;
  double forward_packet_length_std = 23;

  // üìè ESTAD√çSTICAS DE LONGITUD - BACKWARD
  uint64 backward_packet_length_max = 30;
  uint64 backward_packet_length_min = 31;
  double backward_packet_length_mean = 32;
  double backward_packet_length_std = 33;

  // üöÄ VELOCIDADES Y RATIOS
  double flow_bytes_per_second = 40;
  double flow_packets_per_second = 41;
  double forward_packets_per_second = 42;
  double backward_packets_per_second = 43;
  double download_upload_ratio = 44;
  double average_packet_size = 45;
  double average_forward_segment_size = 46;
  double average_backward_segment_size = 47;

  // ‚è±Ô∏è INTER-ARRIVAL TIMES - FLOW
  double flow_inter_arrival_time_mean = 50;
  double flow_inter_arrival_time_std = 51;
  uint64 flow_inter_arrival_time_max = 52;
  uint64 flow_inter_arrival_time_min = 53;

  // ‚è±Ô∏è INTER-ARRIVAL TIMES - FORWARD
  double forward_inter_arrival_time_total = 54;
  double forward_inter_arrival_time_mean = 55;
  double forward_inter_arrival_time_std = 56;
  uint64 forward_inter_arrival_time_max = 57;
  uint64 forward_inter_arrival_time_min = 58;

  // ‚è±Ô∏è INTER-ARRIVAL TIMES - BACKWARD
  double backward_inter_arrival_time_total = 59;
  double backward_inter_arrival_time_mean = 60;
  double backward_inter_arrival_time_std = 61;
  uint64 backward_inter_arrival_time_max = 62;
  uint64 backward_inter_arrival_time_min = 63;

  // üè≥Ô∏è TCP FLAGS COUNTS
  uint32 fin_flag_count = 70;
  uint32 syn_flag_count = 71;
  uint32 rst_flag_count = 72;
  uint32 psh_flag_count = 73;
  uint32 ack_flag_count = 74;
  uint32 urg_flag_count = 75;
  uint32 cwe_flag_count = 76;
  uint32 ece_flag_count = 77;

  // üè≥Ô∏è TCP FLAGS DIRECTIONAL
  uint32 forward_psh_flags = 78;
  uint32 backward_psh_flags = 79;
  uint32 forward_urg_flags = 80;
  uint32 backward_urg_flags = 81;

  // üìã HEADERS Y BULK TRANSFER
  double forward_header_length = 85;
  double backward_header_length = 86;
  double forward_average_bytes_bulk = 87;
  double forward_average_packets_bulk = 88;
  double forward_average_bulk_rate = 89;
  double backward_average_bytes_bulk = 90;
  double backward_average_packets_bulk = 91;
  double backward_average_bulk_rate = 92;

  // üìä ESTAD√çSTICAS ADICIONALES
  uint64 minimum_packet_length = 95;
  uint64 maximum_packet_length = 96;
  double packet_length_mean = 97;
  double packet_length_std = 98;
  double packet_length_variance = 99;

  // üéØ FEATURES ESPEC√çFICAS POR TIPO DE MODELO ML
  repeated double ddos_features = 100;           // 83 features para DDOS
  repeated double ransomware_features = 101;     // 83 features para Ransomware
  repeated double general_attack_features = 102; // 23 features para RF general
  repeated double internal_traffic_features = 103; // 4-5 features tr√°fico interno

  // üîß FEATURES PERSONALIZADAS Y METADATOS
  map<string, double> custom_features = 110;
  map<string, string> feature_metadata = 111;
}

// =====================================================================
// üåç GEOLOCATION - CLARAMENTE DIFERENCIADA (SNIFFER/SOURCE/DESTINATION)
// =====================================================================

message GeoLocationInfo {
  string country_name = 1;
  string country_code = 2;              // "ES", "US", "CN"
  string region_name = 3;
  string city_name = 4;
  double latitude = 5;
  double longitude = 6;
  string timezone = 7;
  string isp_name = 8;
  string organization_name = 9;
  string autonomous_system_number = 10;
  bool is_anonymous_proxy = 11;
  bool is_satellite_provider = 12;
  bool is_tor_exit_node = 13;
  bool is_known_malicious = 14;
  ThreatLevel threat_level = 15;

  enum ThreatLevel {
    UNKNOWN = 0;
    LOW = 1;
    MEDIUM = 2;
    HIGH = 3;
    CRITICAL = 4;
  }
}

message GeoEnrichment {
  // üè† GEOLOCALIZACI√ìN DEL NODO SNIFFER (donde est√° f√≠sicamente)
  GeoLocationInfo sniffer_node_geo = 1;

  // üì§ GEOLOCALIZACI√ìN DEL SOURCE IP (quien origina el tr√°fico)
  GeoLocationInfo source_ip_geo = 2;

  // üì• GEOLOCALIZACI√ìN DEL DESTINATION IP (quien recibe el tr√°fico)
  GeoLocationInfo destination_ip_geo = 3;

  // üìè AN√ÅLISIS GEOGR√ÅFICO ENTRE SOURCE Y DESTINATION
  double source_destination_distance_km = 10;
  bool source_destination_same_country = 11;
  bool source_destination_same_continent = 12;
  string distance_category = 13;        // "local", "regional", "national", "international"

  // üìè AN√ÅLISIS GEOGR√ÅFICO SNIFFER VS SOURCE
  double sniffer_source_distance_km = 20;
  bool sniffer_source_same_country = 21;
  string sniffer_source_relationship = 22; // "internal", "external", "unknown"

  // üìè AN√ÅLISIS GEOGR√ÅFICO SNIFFER VS DESTINATION
  double sniffer_destination_distance_km = 25;
  bool sniffer_destination_same_country = 26;
  string sniffer_destination_relationship = 27; // "internal", "external", "unknown"

  // üîç THREAT INTELLIGENCE Y ANOMAL√çAS
  repeated string threat_intelligence_matches = 30;
  string threat_intelligence_source = 31;
  float geographic_anomaly_score = 32;   // 0.0-1.0
  bool suspicious_geographic_pattern = 33;

  // ‚úÖ ESTADO DEL ENRIQUECIMIENTO
  bool sniffer_node_enriched = 40;
  bool source_ip_enriched = 41;
  bool destination_ip_enriched = 42;
  bool enrichment_complete = 43;

  // üåê IP DISCOVERY (para IPs privadas)
  bool public_ip_discovery_attempted = 45;
  string original_private_ip = 46;
  string discovered_public_ip = 47;
  string ip_discovery_service = 48;
  google.protobuf.Timestamp ip_discovery_time = 49;

  // üìä METADATOS DEL ENRIQUECIMIENTO
  string enricher_version = 50;
  string geoip_method = 51;              // "maxmind", "ipapi", "mock"
  string geoip_database_version = 52;
  bool fallback_coordinates_used = 53;
  float total_lookup_latency_ms = 54;
  int32 cache_hits = 55;
  int32 cache_misses = 56;
  float enrichment_success_rate = 57;
  google.protobuf.Timestamp enrichment_timestamp = 58;
}

// =====================================================================
// ‚è∞ TIME WINDOWS & AGGREGATION
// =====================================================================

message TimeWindow {
  google.protobuf.Timestamp window_start = 1;
  google.protobuf.Timestamp window_end = 2;
  google.protobuf.Duration window_duration = 3;
  uint64 sequence_number = 4;
  WindowType window_type = 5;

  enum WindowType {
    SLIDING = 0;
    TUMBLING = 1;
    SESSION_BASED = 2;
    ADAPTIVE = 3;
  }
}

message FlowAggregation {
  TimeWindow time_window = 1;
  uint64 total_flows_in_window = 2;
  uint64 total_packets_in_window = 3;
  uint64 total_bytes_in_window = 4;
  map<string, uint64> protocol_distribution = 5;
  map<string, uint64> port_distribution = 6;
  map<string, uint64> country_distribution = 7;
  double window_anomaly_score = 8;
}

// =====================================================================
// üß† MACHINE LEARNING ANALYSIS
// =====================================================================

message ModelPrediction {
  string model_name = 1;
  string model_version = 2;
  ModelType model_type = 3;
  string prediction_class = 4;
  double confidence_score = 5;
  repeated double class_probabilities = 6;
  google.protobuf.Timestamp prediction_timestamp = 7;
  google.protobuf.Duration processing_duration = 8;

  enum ModelType {
    RANDOM_FOREST_GENERAL = 0;         // RF 23 features - detecci√≥n general
    LIGHTGBM_DDOS = 1;                 // LightGBM especializado DDOS
    NEURAL_NETWORK_RANSOMWARE = 2;     // NN especializado Ransomware
    ENSEMBLE_TRICAPA = 3;              // Ensemble de m√∫ltiples modelos
    INTERNAL_TRAFFIC_CLASSIFIER = 4;   // Clasificador tr√°fico interno
    TRANSFORMER_ADVANCED = 5;          // Modelo transformer avanzado
  }
}

message TricapaMLAnalysis {
  // ü•á NIVEL 1 - Filtro General (RF con 23 features)
  ModelPrediction level1_general_detection = 1;
  bool attack_detected_level1 = 2;
  double level1_confidence = 3;

  // ü•à NIVEL 2 - Clasificaci√≥n de Contexto
  ModelPrediction level2_context_classification = 4;
  string traffic_context = 5;           // "INTERNAL", "EXTERNAL_WEB", "EXTERNAL_OTHER"

  // ü•â NIVEL 3 - Especializaci√≥n por Amenaza (83 features)
  repeated ModelPrediction level3_specialized_predictions = 6;
  string final_threat_classification = 7;
  double ensemble_confidence = 8;

  // üìä AN√ÅLISIS AGREGADO
  google.protobuf.Duration total_analysis_duration = 10;
  repeated string models_activated = 11;
  map<string, double> feature_importance_scores = 12;
  bool requires_human_review = 13;
}

// =====================================================================
// üåê DISTRIBUTED SYSTEM NODES
// =====================================================================

message DistributedNode {
  string node_id = 1;
  string node_hostname = 2;
  string node_ip_address = 3;
  string physical_location = 4;
  NodeRole node_role = 5;
  NodeStatus node_status = 6;
  google.protobuf.Timestamp last_heartbeat = 7;

  // üîß INFORMACI√ìN T√âCNICA DEL NODO
  string operating_system = 8;
  string os_version = 9;
  string agent_version = 10;
  int32 process_id = 11;
  string container_id = 12;
  string cluster_name = 13;

  // üìä M√âTRICAS DEL NODO
  float cpu_usage_percent = 15;
  float memory_usage_mb = 16;
  int32 active_connections = 17;
  int32 queue_depth = 18;
  google.protobuf.Duration uptime = 19;

  // üîß CAPACIDADES Y CONFIGURACI√ìN
  map<string, string> node_capabilities = 20;
  repeated string supported_protocols = 21;
  string configuration_version = 22;

  enum NodeRole {
    PACKET_SNIFFER = 0;               // Captura paquetes de red
    FEATURE_PROCESSOR = 1;            // Extrae features de paquetes
    GEOIP_ENRICHER = 2;               // Enriquece con informaci√≥n geogr√°fica
    ML_ANALYZER = 3;                  // Ejecuta an√°lisis de ML
    THREAT_DETECTOR = 4;              // Detecci√≥n especializada de amenazas
    FIREWALL_CONTROLLER = 5;          // Control de firewall
    DATA_AGGREGATOR = 6;              // Agregaci√≥n de datos
    DASHBOARD_VISUALIZER = 7;         // Visualizaci√≥n en dashboard
    CLUSTER_COORDINATOR = 8;          // Coordinaci√≥n del cluster
  }

  enum NodeStatus {
    ACTIVE = 0;
    STARTING = 1;
    STOPPING = 2;
    ERROR = 3;
    MAINTENANCE = 4;
    OVERLOADED = 5;
  }
}

// üìä PIPELINE TRACKING - Seguimiento detallado del procesamiento
message PipelineTracking {
  string pipeline_id = 1;
  google.protobuf.Timestamp pipeline_start = 2;

  // üî¢ IDENTIFICADORES DE PROCESOS POR ETAPA
  int32 sniffer_process_id = 3;
  int32 processor_process_id = 4;
  int32 enricher_process_id = 5;
  int32 analyzer_process_id = 6;
  int32 detector_process_id = 7;
  int32 controller_process_id = 8;

  // ‚è∞ TIMESTAMPS POR ETAPA
  google.protobuf.Timestamp packet_captured_at = 10;
  google.protobuf.Timestamp features_extracted_at = 11;
  google.protobuf.Timestamp geoip_enriched_at = 12;
  google.protobuf.Timestamp ml_analyzed_at = 13;
  google.protobuf.Timestamp threat_detected_at = 14;
  google.protobuf.Timestamp action_taken_at = 15;

  // üìä M√âTRICAS DE RENDIMIENTO
  google.protobuf.Duration total_processing_latency = 20;
  int32 pipeline_hops_count = 21;
  string processing_path = 22;          // "sniffer->processor->enricher->analyzer"

  // üîÑ CONTROL DE ERRORES Y REINTENTOS
  int32 retry_attempts = 25;
  repeated string processing_errors = 26;
  bool requires_reprocessing = 27;

  // üè∑Ô∏è METADATOS POR COMPONENTE
  map<string, string> component_metadata = 30;
  repeated string processing_tags = 31;
}

// =====================================================================
// ü§ñ INTELLIGENT SYSTEMS (RAG + Human-in-the-loop)
// =====================================================================

message RAGAnalysis {
  string query_text = 1;
  repeated string retrieved_knowledge = 2;
  repeated double relevance_scores = 3;
  string ai_generated_analysis = 4;
  double analysis_confidence = 5;
  repeated string knowledge_sources = 6;
  google.protobuf.Timestamp analysis_timestamp = 7;
}

message HumanFeedback {
  string feedback_id = 1;
  string analyst_user_id = 2;
  string event_reference_id = 3;
  FeedbackType feedback_type = 4;
  bool confirmed_true_positive = 5;
  bool confirmed_false_positive = 6;
  string analyst_explanation = 7;
  repeated string analyst_tags = 8;
  int32 analyst_confidence_rating = 9;  // 1-10
  google.protobuf.Timestamp feedback_timestamp = 10;

  enum FeedbackType {
    VALIDATION = 0;
    CORRECTION = 1;
    ENHANCEMENT = 2;
    FALSE_POSITIVE_REPORT = 3;
    ADDITIONAL_CONTEXT = 4;
  }
}

message HumanInTheLoopReview {
  bool requires_human_analysis = 1;
  ReviewPriority review_priority = 2;
  repeated string review_reasons = 3;
  HumanFeedback analyst_feedback = 4;
  google.protobuf.Timestamp escalated_timestamp = 5;
  google.protobuf.Timestamp reviewed_timestamp = 6;
  bool review_completed = 7;

  enum ReviewPriority {
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
    CRITICAL = 3;
    EMERGENCY = 4;
  }
}

// =====================================================================
// üéØ MAIN EVENT MESSAGE - Estructura Principal Limpia
// =====================================================================

message NetworkSecurityEvent {
  // üîç IDENTIFICACI√ìN √öNICA
  string event_id = 1;
  google.protobuf.Timestamp event_timestamp = 2;
  string originating_node_id = 3;

  // üìä DATOS FUNDAMENTALES
  NetworkFeatures network_features = 4;
  GeoEnrichment geo_enrichment = 5;
  TimeWindow time_window = 6;

  // üß† AN√ÅLISIS DE MACHINE LEARNING
  TricapaMLAnalysis ml_analysis = 7;
  repeated ModelPrediction additional_model_predictions = 8;

  // üåê INFORMACI√ìN DEL SISTEMA DISTRIBUIDO
  DistributedNode capturing_node = 9;
  PipelineTracking pipeline_tracking = 10;

  // ü§ñ SISTEMAS INTELIGENTES
  RAGAnalysis rag_analysis = 11;
  HumanInTheLoopReview human_review = 12;

  // üìä SCORING Y CLASIFICACI√ìN FINAL
  double overall_threat_score = 15;     // 0.0-1.0
  string final_classification = 16;     // "BENIGN", "SUSPICIOUS", "MALICIOUS"
  string threat_category = 17;          // "DDOS", "RANSOMWARE", "NORMAL", etc.

  // üîó CORRELACI√ìN Y TRAZABILIDAD
  string correlation_id = 20;
  repeated string related_event_ids = 21;
  string event_chain_id = 22;

  // üìù METADATOS GENERALES
  uint32 schema_version = 25;           // 31 para v3.1
  map<string, string> custom_metadata = 26;
  repeated string event_tags = 27;
  string protobuf_version = 28;         // "3.1.0"
}

// =====================================================================
// üì¶ BATCH PROCESSING
// =====================================================================

message EventBatch {
  repeated NetworkSecurityEvent events = 1;
  uint64 batch_id = 2;
  google.protobuf.Timestamp batch_created_at = 3;
  uint32 batch_size = 4;
  ProcessingMode processing_mode = 5;
  string batch_source_node = 6;

  enum ProcessingMode {
    REAL_TIME = 0;
    NEAR_REAL_TIME = 1;
    BATCH_PROCESSING = 2;
    HISTORICAL_ANALYSIS = 3;
  }
}

// =====================================================================
// ‚öôÔ∏è SYSTEM CONFIGURATION
// =====================================================================

message SystemConfiguration {
  // üß† Configuraci√≥n ML
  repeated string enabled_ml_models = 1;
  map<string, double> threat_score_thresholds = 2;

  // ‚è∞ Configuraci√≥n temporal
  google.protobuf.Duration time_window_size = 3;
  uint32 max_events_per_window = 4;

  // üåê Configuraci√≥n distribuida
  repeated DistributedNode cluster_nodes = 5;
  map<string, string> node_role_assignments = 6;

  // üîê Configuraci√≥n de seguridad
  bool encryption_enabled = 7;
  bool compression_enabled = 8;
  string encryption_algorithm = 9;

  // ü§ñ Configuraci√≥n RAG
  bool rag_analysis_enabled = 10;
  string rag_model_endpoint = 11;
  repeated string knowledge_base_sources = 12;
}