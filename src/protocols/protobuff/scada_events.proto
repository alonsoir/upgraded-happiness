syntax = "proto3";

package scada.events;

// Enumeraciones para tipos de eventos y severidad
enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  HEARTBEAT = 1;
  SECURITY_ALERT = 2;
  NETWORK_ANOMALY = 3;
  PROTOCOL_VIOLATION = 4;
  PERFORMANCE_ISSUE = 5;
  SYSTEM_STATUS = 6;
  AGENT_START = 7;
  AGENT_STOP = 8;
  CONFIG_CHANGE = 9;
  SCADA_ALARM = 10;
  MODBUS_EVENT = 11;
  DNP3_EVENT = 12;
}

enum Severity {
  SEVERITY_UNSPECIFIED = 0;
  INFO = 1;
  LOW = 2;
  MEDIUM = 3;
  HIGH = 4;
  CRITICAL = 5;
}

// Mensaje principal de evento
message EventData {
  string event_id = 1;
  int64 timestamp = 2;  // nanoseconds since epoch
  EventType event_type = 3;
  Severity severity = 4;
  string source_ip = 5;
  string target_ip = 6;
  map<string, Value> properties = 7;
  map<string, Value> metadata = 8;
}

// Valor genérico para propiedades y metadata
message Value {
  oneof kind {
    double number_value = 1;
    string string_value = 2;
    bool bool_value = 3;
    StructValue struct_value = 4;
    ListValue list_value = 5;
  }
}

// Estructura anidada
message StructValue {
  map<string, Value> fields = 1;
}

// Lista de valores
message ListValue {
  repeated Value values = 1;
}

// Métricas de serialización
message SerializationMetrics {
  int64 serialization_time_ns = 1;
  int64 deserialization_time_ns = 2;
  int32 original_size_bytes = 3;
  int32 compressed_size_bytes = 4;
  int32 final_size_bytes = 5;
  float compression_ratio = 6;
  int64 memory_usage_bytes = 7;
  int64 cpu_time_ns = 8;
}

// Batch de eventos para transmisión eficiente
message EventBatch {
  repeated EventData events = 1;
  int64 batch_timestamp = 2;
  string batch_id = 3;
  map<string, string> batch_metadata = 4;
}